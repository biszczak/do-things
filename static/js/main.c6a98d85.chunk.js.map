{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["AddTask","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","minDate","Date","toISOString","slice","handleText","e","setState","text","target","value","handleSelect","priority","handleDate","date","handleClick","_this$state","state","length","add","formClass","isFormVisible","buttonClass","alert","toggleAddTask","checked","maxDate","react_default","a","createElement","Fragment","className","style","display","displayForm","htmlFor","id","type","placeholder","onChange","name","min","max","onClick","width","height","color","borderRadius","position","left","marginTop","cursor","fontSize","paddingTop","paddingLeft","backgroundColor","zIndex","index_esm","Component","Task","backgroundPriority","_props$task","task","active","finishDate","alignItems","marginRight","change","delete","finish","toLocaleString","textDecoration","TaskList","tasks","filter","done","sort","b","toLowerCase","activeTasks","map","src_components_Task","key","doneTasks","paddingBottom","marginBottom","top","paddingRight","Header","allTasks","toConsumableArray","percentage","Math","floor","today","toDateString","day","substring","month","restDate","indexOf","polDate","concat","dist_index_esm","styles","buildStyles","textSize","textColor","trailColor","pathColor","App","counter","important","deleteTask","console","log","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","src_components_Header","src_components_AddTask","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6a98d85.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { IoIosAdd } from 'react-icons/io'\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends Component {\r\n    minDate = new Date().toISOString().slice(0, 10);\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            priority: 'normal',\r\n            checked: false,\r\n            date: this.minDate,\r\n            formClass: 'form',\r\n            isFormVisible: false,\r\n            buttonClass: 'add-btn'\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleText = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleSelect = (e) => {\r\n        this.setState({\r\n            priority: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { text, priority, date } = this.state;\r\n        if (text.length > 2 && text.length < 16) {\r\n            const add = this.props.add(text, priority, date);\r\n            if (add) {\r\n                this.setState({\r\n                    text: '',\r\n                    priority: 'normal',\r\n                    date: this.minDate,\r\n                    formClass: 'form',\r\n                    isFormVisible: false,\r\n                    buttonClass: 'add-btn'\r\n                })\r\n            }\r\n        } else {\r\n            alert('Dodaj krótkie nazwy zadań! Pomiędzy 3 a 15 znaków')\r\n        }\r\n    }\r\n\r\n    toggleAddTask = () => {\r\n        if (!this.state.isFormVisible) {\r\n            this.setState({\r\n                formClass: 'form active',\r\n                isFormVisible: true,\r\n                buttonClass: 'add-btn open'\r\n            })\r\n\r\n        } else {\r\n            this.setState({\r\n                formClass: 'form',\r\n                isFormVisible: false,\r\n                buttonClass: 'add-btn'\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n        maxDate = maxDate + '-12-31';\r\n        return (\r\n            <>\r\n                <div className={this.state.formClass} style={{ display: this.state.displayForm }}>\r\n                    <h2>Dodaj zadanie</h2>\r\n                    <div className=\"single-input\">\r\n                        <label htmlFor=\"addTask\">Nazwa</label>\r\n                        <input className=\"task-input\" id=\"addTask\" type=\"text\" placeholder=\"dodaj zadanie\" value={this.state.text} onChange={this.handleText} />\r\n                    </div>\r\n                    <div className=\"single-input\">\r\n                        <label htmlFor=\"priority\">Ważność zadania</label>\r\n                        <select name=\"priority\" id=\"priority\" onChange={this.handleSelect} value={this.state.priority}>\r\n                            <option value=\"normal\">Normalne</option>\r\n                            <option value=\"important\">Ważne</option>\r\n                            <option value=\"very important\">Bardzo ważne!</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"single-input\">\r\n                        <label htmlFor=\"date\">Do kiedy zrobić</label>\r\n                        <input className=\"date-input\" type=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate} />\r\n                    </div>\r\n                    <button onClick={this.handleClick}>Dodaj</button>\r\n                </div>\r\n                <div className={this.state.buttonClass} onClick={this.toggleAddTask} style={{ width: 50, height: 50, color: '#fff', borderRadius: '30px', position: 'absolute', left: 'calc(50% - 20px)', marginTop: '-25px', cursor: 'pointer', fontSize: 36, paddingTop: 6, paddingLeft: 7, backgroundColor: '#f76f71', zIndex: 2 }} ><IoIosAdd /></div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport { IoMdCheckmark, IoMdClose } from \"react-icons/io\";\r\nimport './Task.css';\r\n\r\nconst Task = (props) => {\r\n\r\n    let backgroundPriority = '#50c878';\r\n\r\n    const { text, date, id, active, priority, finishDate } = props.task;\r\n\r\n    if (priority === 'normal') {\r\n        backgroundPriority = '#50c878'\r\n    }\r\n    if (priority === 'important') {\r\n        backgroundPriority = '#fffa5a'\r\n    }\r\n    if (priority === 'very important') {\r\n        backgroundPriority = '#BD2031'\r\n    }\r\n\r\n    if (active) {\r\n\r\n        return (\r\n            <div className=\"task-container\">\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <div style={{ width: 20, height: 20, borderRadius: '50%', backgroundColor: backgroundPriority, marginRight: 20 }}>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <p>{text}</p>\r\n                        <span style={{ fontSize: 12, color: 'grey' }}>termin: {date}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"confirm\" onClick={() => props.change(id)}>\r\n                        <IoMdCheckmark />\r\n                    </button>\r\n                    <button className=\"delete\" onClick={() => props.delete(id)}>\r\n                        <IoMdClose />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    } else {\r\n        const finish = new Date(finishDate).toLocaleString();\r\n        return (\r\n            <div className=\"task-container\">\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <div style={{ width: 20, height: 20, borderRadius: '50%', backgroundColor: backgroundPriority, marginRight: 20 }}>\r\n                    </div>\r\n                    <div>\r\n                        <p style={{ textDecoration: 'line-through' }}>{text}</p>\r\n                        <span style={{ fontSize: '12px', color: 'grey' }}>wykonano:  {finish}</span>\r\n                    </div>\r\n                </div>\r\n                <button className=\"delete\" onClick={() => props.delete(id)}>\r\n                    <IoMdClose />\r\n                </button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task'\r\nconst TaskList = (props) => {\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n    // console.log(active, done)\r\n    if (done.length >= 2) {\r\n        done.sort((a, b) => {\r\n            return b.finishDate - a.finishDate\r\n        })\r\n    }\r\n\r\n    if (active.length >= 2) {\r\n        active.sort((a, b) => {\r\n            a = a.text.toLowerCase()\r\n            b = b.text.toLowerCase()\r\n            if (a < b) return -1\r\n            if (a > b) return 1\r\n            return 0\r\n        })\r\n    }\r\n\r\n\r\n    //Wytłumaczenie metody sort()\r\n    // done.sort((a,b) => {\r\n    //     if(a.finishDate > b.finishDate) {\r\n    //         return 1\r\n    //     }\r\n    //     if(a.finishDate < b.finishDate) {\r\n    //         return -1\r\n    //     }\r\n    //     return 0\r\n    // })\r\n\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    return (\r\n        <>\r\n            <div className=\"active\" style={{ paddingBottom: 15 }}>\r\n                <h2 style={{ marginBottom: 15 }}>Zadania do zrobienia</h2>\r\n                {activeTasks.length > 0 ? activeTasks : <p>Brak zadań</p>}\r\n            </div>\r\n            <div className=\"done\" style={{ position: 'relative', paddingBottom: 30, }}>\r\n                <h2>Zadania zrobione <em>({done.length})</em></h2>\r\n                {done.length > 5 && <span style={{ top: '20px', fontSize: 12, color: 'grey', position: 'absolute', }} >Pięć ostatnio wykonanych zadań</span>}\r\n                {doneTasks.slice(0, 5)}\r\n            </div>\r\n            <p style={{ marginTop: 30, marginBottom: 30, paddingLeft: 15, paddingRight: 15 }}>Copyright by Biszczak</p>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport './Header.css';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst Header = (props) => {\r\n    const allTasks = [...props.tasks];\r\n    const activeTasks = allTasks.filter(task => task.active && task);\r\n    const doneTasks = allTasks.filter(task => !task.active && task);\r\n\r\n\r\n    const percentage = Math.floor(doneTasks.length / allTasks.length * 100);\r\n    const today = new Date().toDateString();\r\n    let day = today.substring(0, 3);\r\n    let month = today.substring(4, 7);\r\n    const restDate = today.substring(8);\r\n    const engMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const engDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n    const polMonths = ['Sty', 'Lut', 'Mar', 'Kwi', 'Maj', 'Cze', 'Lip', 'Sie', 'Wrz', 'Paź', 'Lis', 'Gru'];\r\n    const polDays = ['Pon', 'Wto', 'Śro', 'Czw', 'Pią', 'Sob', 'Nie'];\r\n\r\n    month = polMonths[engMonths.indexOf(month)];\r\n    day = polDays[engDays.indexOf(day)];\r\n\r\n    const polDate = `${day} ${month} ${restDate}`;\r\n    return (\r\n        <header>\r\n            <div className=\"app-title\">\r\n                <h1>Just<br />do it!</h1>\r\n                <p>{polDate}</p>\r\n            </div>\r\n            <div className=\"statistics\">\r\n                <div className=\"tasks\">\r\n                    <div className=\"active\">\r\n                        <span>{activeTasks.length}</span>\r\n                        <p>Aktywne</p>\r\n                    </div>\r\n                    <div className=\"done\">\r\n                        <span>{doneTasks.length}</span>\r\n                        <p>Zrobiono</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"progress\">\r\n                    <CircularProgressbar className=\"progressbar\" styles={buildStyles({ textSize: '26px', textColor: '#f88', trailColor: '#d6d6d6', pathColor: `#f76f71`, })} value={percentage} text={`${percentage}%`} />\r\n                    <p>wykonano</p>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AddTask from './AddTask';\r\nimport TaskList from './TaskList'\r\nimport Header from './Header';\r\n\r\nclass App extends Component {\r\n  counter = 9;\r\n\r\n  state = {\r\n    tasks: [\r\n      {\r\n        id: 0,\r\n        text: 'Posprzątać',\r\n        date: '2019-02-15',\r\n        priority: 'normal',\r\n        active: true,\r\n        finishDate: null\r\n      },\r\n      {\r\n        id: 1,\r\n        text: 'Nauka',\r\n        date: '2019-02-09',\r\n        important: false,\r\n        active: true,\r\n        finishDate: null\r\n      },\r\n      {\r\n        id: 2,\r\n        text: 'Umyć samochód',\r\n        date: '2019-03-03',\r\n        important: false,\r\n        active: true,\r\n        finishDate: null\r\n      },\r\n\r\n    ]\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    console.log('delete ' + id)\r\n    // const tasks = [...this.state.tasks];\r\n    // const index = tasks.findIndex(task => task.id === id);\r\n    // tasks.splice(index, 1);\r\n    // this.setState({\r\n    //   tasks\r\n    // })\r\n\r\n    let tasks = [...this.state.tasks];\r\n    tasks = tasks.filter(task => task.id !== id)\r\n    this.setState({\r\n      tasks\r\n    })\r\n  }\r\n\r\n  changeTaskStatus = (id) => {\r\n    console.log('change ' + id);\r\n    const tasks = Array.from(this.state.tasks);\r\n    tasks.forEach(task => {\r\n      if (task.id === id) {\r\n        task.active = false;\r\n        task.finishDate = new Date().getTime()\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      tasks\r\n    })\r\n  }\r\n\r\n  addTask = (text, priority, date) => {\r\n    console.log('dodanoobiekt')\r\n    const task = {\r\n      id: this.counter,\r\n      text: text,\r\n      priority: priority,\r\n      date: date,\r\n      active: true,\r\n      finishDate: null\r\n    }\r\n    this.counter++\r\n\r\n    this.setState(prevState => ({\r\n      tasks: [...prevState.tasks, task]\r\n    }))\r\n    return true\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Header tasks={this.state.tasks} />\r\n        <AddTask add={this.addTask} />\r\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}